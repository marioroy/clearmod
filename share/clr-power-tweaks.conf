
# Clear Power Tweaks applied via "clr-power.service".
# https://github.com/clearlinux/clr-power-tweaks/blob/master/src/data.h
# Tweaking kernel parameters for response time consistency.
# https://wiki.archlinux.org/title/gaming

# Set the BORE minimal value for min_base_slice_ns.
# Computes to 1000Hz = 2.0ms, 800Hz = 2.5ms, 600Hz = 1.6(6)ms, 500Hz = 2.0ms.
# /sys/kernel/debug/sched/min_base_slice_ns 1600000

# Increase thread runtime limit to mitigate jitters running a process with
# real-time attributes, while background jobs consume CPU. (default 950000)
/proc/sys/kernel/sched_rt_runtime_us -1
/proc/sys/kernel/sched_rr_timeslice_ms 30

# Enable SCHED_AUTOGROUP. The setting optimizes the scheduler to isolate
# aggressive CPU burners (like build jobs) from desktop applications.
# (default 1, clr-power-tweaks)
/proc/sys/kernel/sched_autogroup_enabled 1

# Disable watchdog timers. (default 0, clr-power-tweaks)
/proc/sys/kernel/nmi_watchdog 0

# Disable proactive compaction because it introduces jitter.
# https://docs.kernel.org/admin-guide/sysctl/vm.html
/proc/sys/vm/compaction_proactiveness 0

# The memory map can be scanned for compactable regions and the default
# behavior is to let unevictable pages be moved. (default 1, PREEMPT_RT 0)
/proc/sys/vm/compact_unevictable_allowed 0

# Enable HugeTLB Vmemmap Optimization. (default 0)
/proc/sys/vm/hugetlb_optimize_vmemmap 1

# Increase vm max map count. A value of 2147483642 (MAX_INT - 5) is the
# default in SteamOS. Fedora considers 1048576 a safe value. (default 65530)
/proc/sys/vm/max_map_count 16777216

# If you have enough free RAM increase the number of minimum free Kilobytes
# to avoid stalls on memory allocations. Do not set this below 1024KB or
# above 5% of your systems memory. Reserving 400MB. (default 67584, 66MB)
/proc/sys/vm/min_free_kbytes 409600

# Only swap-in pages requested, avoid readahead. (CachyOS default)
/proc/sys/vm/page-cluster 0

# Avoid swapping (locking pages that introduces latency and uses disk IO)
# unless the system has no more free memory. (default 10, clr-power-tweaks)
/proc/sys/vm/swappiness 10

# Disable watermark boosting since it's a total dumpster fire.
# What watermark boosting does is preemptively fire up kswapd to free
# memory when there hasn't been an allocation failure.
# From: sultan at kerneltoast dot com
/proc/sys/vm/watermark_boost_factor 0

# Disable zone reclaim (locking and moving memory pages that introduces
# latency spikes).
/proc/sys/vm/zone_reclaim_mode 0

# The Linux kernel periodically scans the hardware for reported errors.
# Disabling machine checks prevents the kernel from interrupting tasks,
# improving overall performance.
/sys/devices/system/machinecheck/machinecheck0/check_interval 0

# Enable Multi-Gen Least Recently Used (MGLRU) but reduce the likelihood
# of lock contention at a minor performance cost. (default 7)
# https://docs.kernel.org/admin-guide/mm/multigen_lru.html
/sys/kernel/mm/lru_gen/enabled 5

# Based on the average human detectable lag (~100ms), N=1000 usually
# eliminates intolerable janks due to thrashing. (default 0)
# https://docs.kernel.org/admin-guide/mm/multigen_lru.html
/sys/kernel/mm/lru_gen/min_ttl_ms 1000

# Allow applications that are optimized for transparent hugepages to obtain
# the performance benefits, and prevent the associated problems otherwise
# i.e. latency spikes, pauses, or jitters due to memory remapping.
# Change enabled from "madvise" to "always" if you prefer extra performance.
# Non-RT defaults: enabled always, shmem_enabled never, and defrag madvise
/sys/kernel/mm/transparent_hugepage/enabled madvise
/sys/kernel/mm/transparent_hugepage/shmem_enabled never
# Improve performance for applications that use tcmalloc.
/sys/kernel/mm/transparent_hugepage/defrag defer+madvise


