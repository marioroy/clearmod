From c949ba5388f242e9b88c9631d7cf8b409bc26331 Mon Sep 17 00:00:00 2001
From: K Prateek Nayak <kprateek.nayak@amd.com>
Date: Fri, 26 Apr 2024 12:46:11 +0200
Subject: sched/eevdf: Limit preemption a little more

  For BORE kernel.

diff --git a/kernel/sched/features.h b/kernel/sched/features.h
index 64ce99cf04ec4e..2285dc30294c8b 100644
--- a/kernel/sched/features.h
+++ b/kernel/sched/features.h
@@ -5,14 +5,24 @@ SCHED_FEAT(PLACE_LAG, true)
  * sleep+wake cycles. EEVDF placement strategy #1, #2 if disabled.
  */
 SCHED_FEAT(PLACE_LAG, true)
+/*
+ * Give new tasks half a slice to ease into the competition.
+ */
 SCHED_FEAT(PLACE_DEADLINE_INITIAL, true)
+/*
+ * Inhibit (wakeup) preemption until the current task has exhausted its slice.
+ */
 #ifdef CONFIG_SCHED_BORE
-SCHED_FEAT(RUN_TO_PARITY, false)
+SCHED_FEAT(RESPECT_SLICE, false)
 #else // !CONFIG_SCHED_BORE
-SCHED_FEAT(RUN_TO_PARITY, true)
+SCHED_FEAT(RESPECT_SLICE, true)
 #endif // CONFIG_SCHED_BORE
 /*
- * Allow tasks with a shorter slice to disregard RUN_TO_PARITY
+ * Relax RESPECT_SLICE to allow preemption once current has reached 0-lag.
+ */
+SCHED_FEAT(RUN_TO_PARITY, false)
+/*
+ * Allow tasks with a shorter slice to disregard RESPECT_SLICE
  */
 SCHED_FEAT(PREEMPT_SHORT, true)
 
-- 
cgit 1.2.3-korg

