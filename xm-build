#!/bin/bash
# -----------------------------------------------------------------------
#   Build XanMod kernel.
#
#   Author: Mario Roy - http://github.com/marioroy
#
#   This program is free software: you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation, version 2 or later of the License.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program.  If not, see <http://www.gnu.org/licenses/>.
# -----------------------------------------------------------------------

function xm_build {
    local variant="$1"
    echo "Building linux-${variant}."

    if [[ ! -d "SOURCES" ]]; then
        echo "Please run fetch-src first and try again."
        exit 2
    fi

    if [[ -n "$BORE" ]]; then
        case "$BORE" in
            0|1) # pass
               ;;
            *) echo "BORE=$BORE is invalid; try again."
               exit 1
        esac
    fi

    if [[ -n "$HZ" ]]; then
        case "$HZ" in
            1000|800|750|600|500|300|250|100) # pass
               ;;
            *) echo "HZ=$HZ is invalid; try again."
               exit 1
        esac
    elif [[ "$variant" == "xmrt-preempt" ]]; then
        HZ=1000
    fi

    if [[ -n "$LOCALMODCONFIG" ]]; then
        case "$LOCALMODCONFIG" in
            0|1) # pass
               ;;
            *) echo "LOCALMODCONFIG=$LOCALMODCONFIG is invalid; try again."
               exit 1
        esac
    fi

    cp -a "../patches"/* "SOURCES"/

    # The _bore definition is ignored for edge, main, and lts variants.

    ( rpmbuild -bb --clean "SPECS/linux-${variant}.spec" \
          --define "abi_package %{nil}" \
          --define "_buildhost $(hostname)" \
          --define "_bore ${BORE:-0}" \
          --define "_hzval ${HZ:-800}" \
          --define "_localmodconfig ${LOCALMODCONFIG:-0}" \
          --define "_topdir ${PWD}" \
          --define "_unpackaged_files_terminate_build 0" \
          --define "_sourcedir ${PWD}/SOURCES" \
          --define "_source_payload w6T0.zstdio" \
          --define "_binary_payload w6T0.zstdio" \
          --undefine "_disable_source_fetch" \
      || { echo "Build failed"; kill $$; }
    ) 2>&1 | grep -Ev '^((chmod|find):.* No such file or directory|warning: Empty %files)'

    rm -fr BUILD BUILDROOT SRPMS
}

case "$1" in
    edge-default | edge-preempt )
        ./fetch-src edge   || exit 1
        cd "rpmbuild.edge" || exit 1
        xm_build "xm${1}"
        ;;
    main-default | main-preempt )
        ./fetch-src main   || exit 1
        cd "rpmbuild.main" || exit 1
        xm_build "xm${1}"
        ;;
    lts-default | lts-preempt )
        ./fetch-src lts   || exit 1
        cd "rpmbuild.lts" || exit 1
        xm_build "xm${1}"
        ;;
    rt-preempt )
        ./fetch-src rt   || exit 1
        cd "rpmbuild.rt" || exit 1
        xm_build "xm${1}"
        ;;
    * ) echo "synopsis"
        echo "   $0 edge-default | edge-preempt"
        echo "   $0 main-default | main-preempt"
        echo "   $0 lts-default | lts-preempt"
        echo "   $0 rt-preempt"
esac

